var _user$project$Main$subscriptions = function (model) {
	return _elm_lang$core$Platform_Sub$batch(
		{
			ctor: '::',
			_0: _user$project$Ports$authorsClass(_user$project$MainMessages$NewClass),
			_1: {
				ctor: '::',
				_0: _user$project$Ports$authors(_user$project$MainMessages$SetAuthors),
				_1: {ctor: '[]'}
			}
		});
};
var _user$project$Main$view = function (model) {
	return A2(
		_elm_lang$html$Html$div,
		{ctor: '[]'},
		{
			ctor: '::',
			_0: _user$project$AuthorsView$view(model),
			_1: {ctor: '[]'}
		});
};
var _user$project$Main$init = function (flags) {
	var addBlankResponseIfNoResponse = F2(
		function (author, authorField) {
			var authorFieldResponse = A2(
				_elm_lang$core$Maybe$withDefault,
				A3(_user$project$MainModel$AuthorFieldResponse, authorField.id, authorField.id, ''),
				_elm_lang$core$List$head(
					A2(
						_elm_lang$core$List$filter,
						function (a) {
							return _elm_lang$core$Native_Utils.eq(a.authorFieldId, authorField.id);
						},
						author.authorFieldResponses)));
			return authorFieldResponse;
		});
	var addBlankResponsesToAuthor = F2(
		function (authorFields, author) {
			return _elm_lang$core$Native_Utils.update(
				author,
				{
					authorFieldResponses: A2(
						_elm_lang$core$List$map,
						addBlankResponseIfNoResponse(author),
						authorFields)
				});
		});
	var _p0 = flags;
	var affiliationLimit = _p0.affiliationLimit;
	var authorLimit = _p0.authorLimit;
	var showInstitution = _p0.showInstitution;
	var showCity = _p0.showCity;
	var showState = _p0.showState;
	var showCountry = _p0.showCountry;
	var $class = _p0.$class;
	var authors = _user$project$Decoders$authors(flags.authorsList);
	var authorFields = _user$project$Decoders$authorFields(flags.authorFields);
	var authorsWithBlankResponses = A2(
		_elm_lang$core$List$map,
		addBlankResponsesToAuthor(authorFields),
		authors);
	var model = _elm_lang$core$Native_Utils.update(
		_user$project$MainModel$initialModel,
		{
			authors: _user$project$MainModel$convertAuthorsListForModel(authorsWithBlankResponses),
			authorMaxId: _user$project$MainModel$getMaxAuthorId(authors),
			affiliationLimit: affiliationLimit,
			authorLimit: authorLimit,
			authorFields: authorFields,
			showInstitution: showInstitution,
			showCity: showCity,
			showState: showState,
			showCountry: showCountry,
			$class: $class
		});
	return {ctor: '_Tuple2', _0: model, _1: _elm_lang$core$Platform_Cmd$none};
};
var _user$project$Main$main = _elm_lang$html$Html$programWithFlags(
	{init: _user$project$Main$init, view: _user$project$Main$view, update: _user$project$MainUpdate$update, subscriptions: _user$project$Main$subscriptions})(
	A2(
		_elm_lang$core$Json_Decode$andThen,
		function (affiliationLimit) {
			return A2(
				_elm_lang$core$Json_Decode$andThen,
				function (authorFields) {
					return A2(
						_elm_lang$core$Json_Decode$andThen,
						function (authorLimit) {
							return A2(
								_elm_lang$core$Json_Decode$andThen,
								function (authorsList) {
									return A2(
										_elm_lang$core$Json_Decode$andThen,
										function ($class) {
											return A2(
												_elm_lang$core$Json_Decode$andThen,
												function (showCity) {
													return A2(
														_elm_lang$core$Json_Decode$andThen,
														function (showCountry) {
															return A2(
																_elm_lang$core$Json_Decode$andThen,
																function (showInstitution) {
																	return A2(
																		_elm_lang$core$Json_Decode$andThen,
																		function (showState) {
																			return _elm_lang$core$Json_Decode$succeed(
																				{affiliationLimit: affiliationLimit, authorFields: authorFields, authorLimit: authorLimit, authorsList: authorsList, $class: $class, showCity: showCity, showCountry: showCountry, showInstitution: showInstitution, showState: showState});
																		},
																		A2(_elm_lang$core$Json_Decode$field, 'showState', _elm_lang$core$Json_Decode$bool));
																},
																A2(_elm_lang$core$Json_Decode$field, 'showInstitution', _elm_lang$core$Json_Decode$bool));
														},
														A2(_elm_lang$core$Json_Decode$field, 'showCountry', _elm_lang$core$Json_Decode$bool));
												},
												A2(_elm_lang$core$Json_Decode$field, 'showCity', _elm_lang$core$Json_Decode$bool));
										},
										A2(_elm_lang$core$Json_Decode$field, 'class', _elm_lang$core$Json_Decode$string));
								},
								A2(_elm_lang$core$Json_Decode$field, 'authorsList', _elm_lang$core$Json_Decode$string));
						},
						A2(_elm_lang$core$Json_Decode$field, 'authorLimit', _elm_lang$core$Json_Decode$int));
				},
				A2(_elm_lang$core$Json_Decode$field, 'authorFields', _elm_lang$core$Json_Decode$string));
		},
		A2(_elm_lang$core$Json_Decode$field, 'affiliationLimit', _elm_lang$core$Json_Decode$int)));
var _user$project$Main$None = {ctor: 'None'};
var _user$project$Main$Sections = {ctor: 'Sections'};
var _user$project$Main$Simple = {ctor: 'Simple'};
